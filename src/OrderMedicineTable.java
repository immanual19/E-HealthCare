
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author emma
 */
public class OrderMedicineTable extends javax.swing.JFrame {

    
    int unitOrdered;
    float desiredMedicinePrice;
    String medicine;
    Patient pa;
    String driver ="com.mysql.jdbc.Driver";
    String url = "jdbc:mysql://localhost:3306/db";
    String user = "root";
    String pass = "immanual";
    /**
     * Creates new form OrderMedicineTable
     */
    public OrderMedicineTable() {
        initComponents();
        
    }
    
    public OrderMedicineTable(String medicine, Patient pa) {
        initComponents();
        this.medicine=medicine;
        this.pa=pa;
        showMedicines();
    }
    
    ArrayList<MedicineData>medicineList(){
        ArrayList<MedicineData> medicine_list=new ArrayList<> ();
        try{
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            String sql="select *from Medicine";
            ResultSet rs;
            rs=con.prepareStatement(sql).executeQuery();
            while(rs.next())
            {
                
                int pharmacistId=rs.getInt("pharmacistId");
                String medicineName=rs.getString("medicinename");
                float unitPrice=rs.getFloat("unitprice");
                int medicineCount=rs.getInt("medcount");
                String location=rs.getString("location");
                String pharmacyName=rs.getString("pharmacyname");
                MedicineData medData;
                
                if(medicine.equals(medicineName))
                {
                    desiredMedicinePrice=unitPrice;
                    medData= new MedicineData(pharmacistId,medicineName,unitPrice,medicineCount,location,pharmacyName);
                    medicine_list.add(medData);
                    
                }
                
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error.","Alert",JOptionPane.WARNING_MESSAGE);
        }
        return medicine_list;
    }
    
        public void showMedicines(){
        ArrayList<MedicineData> med1= medicineList();
        Collections.sort(med1,new Comparator<MedicineData>(){
        public int compare(MedicineData m1, MedicineData m2){
            return m1.getUnitPrice()<m2.getUnitPrice()?-1:1;
        }
        });
     
      DefaultTableModel model = (DefaultTableModel)medicine_table.getModel();
        Object[] row = new Object[6];
        for(int i = 0;i<med1.size();i++)
        {
            row[0] = med1.get(i).getPharmacistId();
            row[1] = med1.get(i).getMedicineName();
            row[2] = med1.get(i).getUnitPrice();
            row[3] = med1.get(i).getMedCount();
            row[4] = med1.get(i).getPharmacyName();
            row[5] = med1.get(i).getLocation();
            
            model.addRow(row);
        }  
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        medicine_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        totalUnit = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pharmacistID = new javax.swing.JTextField();
        confirmOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        medicine_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pharmacist ID", "Medicine Name", "Unit Price", "Medicine Count", "Pharmacy Name", "Address"
            }
        ));
        jScrollPane1.setViewportView(medicine_table);

        jLabel1.setText("Total Unit");

        jLabel2.setText("Pharmacist ID");

        confirmOrder.setText("Confirm Order");
        confirmOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(totalUnit))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pharmacistID)))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(confirmOrder)
                        .addContainerGap(55, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pharmacistID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totalUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(confirmOrder)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmOrderActionPerformed
        // TODO add your handling code here:
        //Now Start here
        unitOrdered=Integer.parseInt(totalUnit.getText());
        String customerName=pa.getName();
        int customerId=pa.getId();
        String customerPhoneNumber=pa.getPhone();
        String customerAddress=pa.getAddress();
        try{
            Connection con = DriverManager.getConnection(url, user, pass);
         String sql = "insert into OrderedMedicine(pharmacistId,customerName,customerPhoneNumber,customerAddress,medicineName,unitOrdered,customerId) values (?,?,?,?,?,?,?)";
         PreparedStatement pst = con.prepareStatement(sql);
         pst.setString(1, pharmacistID.getText());
         pst.setString(2, customerName);
         pst.setString(3, customerPhoneNumber);
         pst.setString(4, customerAddress);
         pst.setString(5,medicine);
         pst.setString(6, totalUnit.getText());
         pst.setInt(7, customerId);
         pst.executeUpdate();
         
         
         float totalAmount=desiredMedicinePrice*unitOrdered;
         JOptionPane.showMessageDialog(this,"Congratulation. You have successfully placed your order. You will be charged "+totalAmount+" Taka only.");
         
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_confirmOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderMedicineTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderMedicineTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderMedicineTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderMedicineTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderMedicineTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicine_table;
    private javax.swing.JTextField pharmacistID;
    private javax.swing.JTextField totalUnit;
    // End of variables declaration//GEN-END:variables
}


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author emma
 */
public class PharmacistOrders extends javax.swing.JFrame {


    String driver ="com.mysql.jdbc.Driver";
    String url = "jdbc:mysql://localhost:3306/db";
    String user = "root";
    String pass = "immanual";
    Pharmacist ph;
    int phId;
    /**
     * Creates new form PharmacistOrders
     */
    public PharmacistOrders() {
        initComponents();
    }

    public PharmacistOrders(Pharmacist ph) {
         //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.ph=ph;
        phId=ph.getId();
        
        showOrders();
        
    }


   
    ArrayList<PharmacistOrdersList>ordersList() {
       ArrayList<PharmacistOrdersList> orders_list=new ArrayList<PharmacistOrdersList> ();
        try{
           // Preferences userPreferences = Preferences.userRoot();
            //int authId = Integer.parseInt(userPreferences.get("authId",null));
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            //System.out.println("Pharmacist Auth: "+authId);
            String sql="select * from OrderedMedicine where pharmacistId="+phId;
            ResultSet rs;
            rs=con.prepareStatement(sql).executeQuery();
            while(rs.next())
            {
            
                int order_id=rs.getInt("id");
                int ph_id=rs.getInt("customerId");
                String customer_name=rs.getString("customerName");
                String customer_phone_number=rs.getString("customerPhoneNumber");
                String customer_address=rs.getString("customerAddress");
                String medicine_name=rs.getString("medicineName");
                int unit_ordered=rs.getInt("unitOrdered");
                
               PharmacistOrdersList orderedMed;
               orderedMed=new PharmacistOrdersList(order_id,ph_id,customer_name,customer_phone_number,customer_address,medicine_name,unit_ordered);
               orders_list.add(orderedMed);
            }
        
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error.","Alert",JOptionPane.WARNING_MESSAGE);
        }
        return orders_list;    
    }
    
        public void showOrders() {
        ArrayList<PharmacistOrdersList> ordersList= ordersList();
     
      DefaultTableModel model = (DefaultTableModel) medicineOrderTable.getModel();
        Object[] row = new Object[7];
        for(int i = 0;i<ordersList.size();i++)
        {
            row[0] = ordersList.get(i).getOrder_id();
            row[1] = ordersList.get(i).getPh_id();
            row[2] = ordersList.get(i).getCustomerName();
            row[3] = ordersList.get(i).getPhoneNumber();
            row[4] = ordersList.get(i).getAddress();
            row[5] = ordersList.get(i).getMedicineName();
            row[6] = ordersList.get(i).getUnitedOrdered();
            model.addRow(row);
        }  
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        medicineOrderTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        medicineOrderId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        orderStatus = new javax.swing.JComboBox();
        setStatus = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        deliveryTime = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        medicineOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "C_ID", "C_Name", "C_Phone", "C_Address", "MedicineName", "Unit Ordered"
            }
        ));
        jScrollPane1.setViewportView(medicineOrderTable);

        jLabel1.setText("OrderID");

        jLabel2.setText("OrderStatus");

        orderStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OrderReceived", "OrderProcessing", "OrderShipped", "OrderDelivered" }));

        setStatus.setText("Set Status");
        setStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setStatusActionPerformed(evt);
            }
        });

        jLabel3.setText("Estimate Delivery");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(setStatus)
                                .addGap(61, 61, 61))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deliveryTime, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(medicineOrderId)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(medicineOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(deliveryTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(setStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setStatusActionPerformed
        // TODO add your handling code here:
        String orderId=medicineOrderId.getText();
        String status=(String)orderStatus.getSelectedItem();
        String dTime=deliveryTime.getText();
        try{
             Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            String query="update OrderedMedicine set status=?,deliveryTime=? where id=?";
            PreparedStatement preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, status);
            preparedStatement.setString(2, dTime);
            preparedStatement.setString(3, orderId);
            preparedStatement.executeUpdate();
            
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_setStatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PharmacistOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PharmacistOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PharmacistOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PharmacistOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PharmacistOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deliveryTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField medicineOrderId;
    private javax.swing.JTable medicineOrderTable;
    private javax.swing.JComboBox orderStatus;
    private javax.swing.JButton setStatus;
    // End of variables declaration//GEN-END:variables
}
